install.packages("tidyverse")
library(raster)
library(rgdal)
library(ggplot2)
library(dismo)
library(tmap)
setwd = "/home/fang/Working/spacial_analysis/raster_n_sf"
aqi.dat = read.csv("/home/fang/IdeaProjects/getdata2/data/out/FairKit/2019/1556380800000.csv")
aqi.df = as.data.frame(aqi.dat)
sub.aqi.df = subset(aqi.df, AQI.PM2.5>0)
sub.aqi.df
hanoi = readOGR(dsn="/home/fang/Working/spacial_analysis/raster_n_sf", layer = "HNm_nen huyen_region");
hanoi = spTransform(hanoi, CRS("+proj=longlat +datum=WGS84"))
hn.df = fortify(hanoi)
ggplot() +
geom_polygon(data= hn.df, aes(x=long, y=lat, group=group))
geom_point(data = sub.aqi.df, aes(x=latitude, y=longitude),
color="blue") +
theme_bw()
ggplot() +
geom_polygon(data= hn.df, aes(x=long, y=lat, group=group))+
geom_point(data = sub.aqi.df, aes(x=latitude, y=longitude),
color="blue") +
theme_bw()
grid = as(r, "SpatialPixels")
grddf = as.data.frame(grid)
pts = sub.aqi.df
coordinates(pts) = ~latitude + longitude
idw = gstat::idw(formula = AQI.PM2.5~1 , location = , newdata = , idp = 1)
idw@data
pts = sub.aqi.df
idw = gstat::idw(formula = AQI.PM2.5~1 , location = , newdata = , idp = 1)
idw@data
idw = gstat::idw(formula = AQI.PM2.5~1 , location = pts, newdata = , idp = 1)
gird = as.df(hn.df)
gird = as(hn.df, )
gird = as(hn.df, "SpacialPixels")
extent(r) <- extent(hanoi)
r <- raster(ncol=180, nrow=180)
extent(r) <- extent(hanoi)
idw = gstat::idw(formula = AQI.PM2.5~1 , location = pts, newdata = r, idp = 1)
library(gstat)
idw = gstat::idw(formula = AQI.PM2.5~1 , location = pts, newdata = r, idp = 1)
r <- raster(ncol=180, nrow=180)
extent(r) <- extent(hanoi)
grid = as(r, "SpatialPixels")
grddf = as.data.frame(grid)
View(grddf)
ggplot() +
geom_polygon(data= hn.df, aes(x=long, y=lat, group=group))+
geom_point(data = sub.aqi.df, aes(x=latitude, y=longitude),
color="blue") +
geom_point(data=grddf, aes(x=x, y=y), shape = 3, size=0.5)+
theme_bw()
ggplot() +
geom_polygon(data= hn.df, aes(x=long, y=lat, group=group))+
geom_point(data = sub.aqi.df, aes(x=latitude, y=longitude),
color="blue") +
geom_point(data=grddf, aes(x=x, y=y), shape = 3, size=0.5)+
theme_bw()
idw = gstat::idw(formula = AQI.PM2.5~1 , location = pts, newdata = r, idp = 1)
idw = gstat::idw(formula = AQI.PM2.5~1 , location = pts, newdata = r, idp = 1)
idw = idw(formula = AQI.PM2.5~1 , location = pts, newdata = r, idp = 1)
r <- raster(ncol=180, nrow=180)
extent(r) <- extent(hanoi)
grid = as(r, "SpatialPixels")
grddf = as.data.frame(grid)
pts = sub.aqi.df
coordinates(pts) = ~latitude + longitude
proj4string(pts) = proj4string(grid)
ggplot() +
geom_polygon(data= hn.df, aes(x=long, y=lat, group=group))+
geom_point(data = sub.aqi.df, aes(x=latitude, y=longitude),
color="blue") +
geom_point(data=grddf, aes(x=x, y=y), shape = 3, size=0.5)+
theme_bw()
idw = idw(formula = AQI.PM2.5~1 , location = pts, newdata = r, idp = 1)
idw = idw(formula = AQI.PM2.5~1 , location = pts, newdata = r, idp = 1)
idw@data
idw = idw(formula = AQI.PM2.5~1 , location = pts, newdata = r, idp = 1)
View(pts)
idw = idw(formula = AQI.PM2.5~1 , location = pts, newdata = r)
idw = idw(formula = AQI.PM2.5~1 , location = pts, newdata = grid)
idw@data
idw.df = as.data.frame(idw)
View(idw.df)
View(idw.df)
idw.df = as.data.frame(idw)
ggplot() +
geom_tile(data = idw.df, aes(x = x, y = y, fill = var1.pred))+
geom_polygon(data= hn.df, aes(x=long, y=lat, group=group))+
geom_point(data = sub.aqi.df, aes(x=latitude, y=longitude),
color="blue") +
geom_point(data=grddf, aes(x=x, y=y), shape = 3, size=0.5)+
theme_bw()
ggplot() +
geom_tile(data = idw.df, aes(x = x, y = y, fill = var1.pred))+
#  geom_polygon(data= hn.df, aes(x=long, y=lat, group=group))+
#  geom_point(data = sub.aqi.df, aes(x=latitude, y=longitude),
color="blue") +
geom_point(data=grddf, aes(x=x, y=y), shape = 3, size=0.5)+
theme_bw()
ggplot() +
geom_tile(data = idw.df, aes(x = x, y = y, fill = var1.pred))+
#  geom_polygon(data= hn.df, aes(x=long, y=lat, group=group))+
#  geom_point(data = sub.aqi.df, aes(x=latitude, y=longitude),
color="blue") +
geom_point(data=grddf, aes(x=x, y=y), shape = 3, size=0.5)+
theme_bw()
ggplot() +
geom_tile(data = idw.df, aes(x = x, y = y, fill = var1.pred))+
#  geom_polygon(data= hn.df, aes(x=long, y=lat, group=group))+
#  geom_point(data = sub.aqi.df, aes(x=latitude, y=longitude),
#             color="blue") +
geom_point(data=grddf, aes(x=x, y=y), shape = 3, size=0.5)+
theme_bw()
ggplot() +
geom_tile(data = idw.df, aes(x = x, y = y, fill = var1.pred))+
#  geom_polygon(data= hn.df, aes(x=long, y=lat, group=group))+
#  geom_point(data = sub.aqi.df, aes(x=latitude, y=longitude),
#             color="blue") +
#  geom_point(data=grddf, aes(x=x, y=y), shape = 3, size=0.5)+
theme_bw()
ggplot() +
geom_tile(data = idw.df, aes(x = x, y = y, fill = var1.pred))+
#  geom_polygon(data= hn.df, aes(x=long, y=lat, group=group))+
#  geom_point(data = sub.aqi.df, aes(x=latitude, y=longitude),
#             color="blue") +
#  geom_point(data=grddf, aes(x=x, y=y), shape = 3, size=0.5)+
scale_fill_gradientn(colors = terrain.colors(10))+
theme_bw()
sparkR.session(appName = "R Spark SQL basic example", sparkConfig = list(spark.some.config.option = "some-value"))
install.packages("sparkR")
#load libraries
library(raster)
library(rgdal)
library(ggplot2)
library(gstat)
library(dplyr)
library(gridExtra)
library(dismo)
library(sf)
library(sp)
# load list file data
file.list <- list.files(path="/home/fang/Working/spacial_analysis/getdata2/data/out/FairKit/2019/hour/")
#load shapefile of the needed area
hanoi = readOGR(dsn="/home/fang/Working/spacial_analysis/raster_n_sf", layer = "HN_huyen");
hanoi = spTransform(hanoi, CRS("+proj=longlat +datum=WGS84"))
hn.df = fortify(hanoi)
#for (i in 1:length(file.list))  {
print(paste(file.list[i], "| ", i, "/", i/length(file.list)*100, "%"))
setwd("/home/fang/Working/spacial_analysis/getdata2/data/out/FairKit/2019/hour/")
aqi.dat = read.csv("1557381600000.csv")
# aqi.dat = read.csv(file.list[i])
aqi.df = as.data.frame(aqi.dat)
sub.aqi.df = dplyr::filter(aqi.df,!is.na(AQI.PM2.5))
na.aqi.df = dplyr::filter(aqi.df,is.na(AQI.PM2.5))
if (nrow(sub.aqi.df) < 10) {
print(paste("has",nrow(sub.aqi.df), "available | too many NA values"))
next
}
View(aqi.df)
view(sub.aqi.df)
View(sub.aqi.df)
sub.aqi.df = dplyr::filter(aqi.df,!is.na(AQI.PM2.5))
na.aqi.df = dplyr::filter(aqi.df,is.na(AQI.PM2.5))
View(sub.aqi.df)
dplyr::filter(aqi.df,!is.na(AQI.PM2.5))
library(raster)
library(rgdal)
library(ggplot2)
library(gstat)
library(dplyr)
library(gridExtra)
library(dismo)
library(sf)
library(sp)
# load list file data
file.list <- list.files(path="/home/fang/Working/spacial_analysis/getdata2/data/out/FairKit/2019/hour")
#load shapefile of the needed area
hanoi = readOGR(dsn="/home/fang/Working/spacial_analysis/raster_n_sf", layer = "huyen_HN_cut");
hanoi = spTransform(hanoi, CRS("+proj=longlat +datum=WGS84"))
hn.df = fortify(hanoi)
#for (i in 1:length(file.list)){
#  file.list[i]
setwd("/home/fang/Working/spacial_analysis/getdata2/data/out/FairKit/2019/hour")
#  aqi.dat = read.csv(file.list[i])
aqi.dat = read.csv("1557381600000.csv")
#  aqi.dat = read.csv(file.list[i])
aqi.dat = read.csv("2019-15-5-16.csv")
aqi.dat = read.csv("2019-15-5-16.csv")
aqi.dat = read.csv("2019-05-15-16.csv")
aqi.dat = read.csv("2019-05-15_16.csv")
aqi.df = as.data.frame(aqi.dat)
sub.aqi.df = dplyr::filter(aqi.df,!is.na(AQI.PM2.5))
na.aqi.df = dplyr::filter(aqi.df,is.na(AQI.PM2.5))
sub.aqi.df
na.aqi.df
names(polutants.aqi) = c("PM2.5", "PM10", "CO")
polutants.aqi = c("AQI.PM2.5", "AQI.PM10", "AQI.CO")
names(polutants.aqi) = c("PM2.5", "PM10", "CO")
switch( polutant["PM2.5"]
)
switch( polutants.aqi["PM2.5"]
)
switch( polutants.aqi["PM2.5"],
"AQI.PM2.5" = {
sub.aqi.df = dplyr::filter(aqi.df,!is.na(AQI.PM2.5))
na.aqi.df = dplyr::filter(aqi.df,is.na(AQI.PM2.5))
}
)
sub.aqi.df
na.aqi.df
switch( polutants.aqi["CO"],
"AQI.PM2.5" = {
sub.aqi.df = dplyr::filter(aqi.df,!is.na(AQI.PM2.5))
na.aqi.df = dplyr::filter(aqi.df,is.na(AQI.PM2.5))
}
)
sub.aqi.df
na.aqi.df
switch( polutants.aqi["CO"],
"AQI.PM2.5" = {
sub.aqi.df = dplyr::filter(aqi.df,!is.na(AQI.PM2.5))
na.aqi.df = dplyr::filter(aqi.df,is.na(AQI.PM2.5))
},
"AQI.CO" = {
sub.aqi.df = dplyr::filter(aqi.df,!is.na(AQI.CO))
na.aqi.df = dplyr::filter(aqi.df,is.na(AQI.CO))
}
)
sub.aqi.df
na.aqi.df
switch( polutants.aqi["PM10"],
"AQI.PM2.5" = {
sub.aqi.df = dplyr::filter(aqi.df,!is.na(AQI.PM2.5))
na.aqi.df = dplyr::filter(aqi.df,is.na(AQI.PM2.5))
},
"AQI.CO" = {
sub.aqi.df = dplyr::filter(aqi.df,!is.na(AQI.CO))
na.aqi.df = dplyr::filter(aqi.df,is.na(AQI.CO))
},
"AQI.PM10" = {
sub.aqi.df = dplyr::filter(aqi.df,!is.na(AQI.PM10))
na.aqi.df = dplyr::filter(aqi.df,is.na(AQI.PM10))
}
)
sub.aqi.df
na.aqi.df
